name: Publish

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{github.head_ref}}

      - name: Set up node
        uses: actions/setup-node@master
        with:
          node-version: 10.x

      - name: Locate Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |-
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test

      - name: Publish to npmjs.com
        run: |-
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          npm publish --access public
          rm .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Package
        id: package
        run: |-
          MODULE_NAME=$(node -p "require('./package.json').name;")
          cd $(mktemp -d)
          FILE_NAME=$(npm pack ${MODULE_NAME})
          echo "::set-output name=name::${FILE_NAME}"
          echo "::set-output name=path::${PWD}/${FILE_NAME}"
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ''
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload GitHub Release Asset
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package.outputs.path }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
